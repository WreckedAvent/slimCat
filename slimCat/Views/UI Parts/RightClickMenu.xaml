<Popup x:Class="slimCat.Views.RightClickMenu"

       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
       xmlns:lib="clr-namespace:slimCat.Libraries"
       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
       mc:Ignorable="d"
       xmlns:vm="clr-namespace:slimCat.ViewModels"
       xmlns:models="clr-namespace:slimCat.Models"

       StaysOpen="False"
       IsOpen="{Binding Path=RightClickMenuViewModel.IsOpen}"
       Placement="MousePoint"
       UseLayoutRounding="True"
       MaxWidth="250"

       d:DataContext="{d:DesignInstance vm:GeneralChannelViewModel}">
    <Border BorderBrush="{StaticResource HighlightBrush}"
            BorderThickness="1"
            Background="{StaticResource BackgroundBrush}"
            TextBlock.Foreground="{StaticResource ForegroundBrush}">
        <StackPanel>
            <Border BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="0,0,0,1"
                    DataContext="{Binding Path=RightClickMenuViewModel}"
                    Padding="10">
                <Grid d:DataContext="{d:DesignInstance vm:RightClickMenuViewModel}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Border Height="75"
                            Width="75"
                            Margin="0,0,10,0"
                            Visibility="{Binding Source={x:Static models:ApplicationSettings.ShowAvatars}, Converter={StaticResource BoolConverter}}">
                        <Image Source="{Binding Path=Target.Avatar}" />
                    </Border>

                    <StackPanel Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                TextBlock.TextAlignment="Left"
                                Margin="0,-6,0,0">
                        <TextBlock Text="{Binding Path=Target.Name}"
                                   TextWrapping="Wrap"
                                   IsHyphenationEnabled="True"
                                   MaxWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=StackPanel}, Path=ActualWidth}"
                                   FontSize="20" />
                        <TextBlock Text="{Binding Path=TargetGender}" />
                        <TextBlock Text="{Binding Path=TargetStatus}" />
                        <TextBlock Text="Global Mod"
                                   Foreground="{StaticResource ModeratorBrush}"
                                   Visibility="{Binding Path=IsGlobalModerator, Converter={StaticResource BoolConverter}, Mode=OneWay}" />
                        <TextBlock Text="Channel Mod"
                                   Foreground="{StaticResource ContrastBrush}"
                                   Visibility="{Binding Path=IsChannelModerator, Converter={StaticResource BoolConverter}, Mode=OneWay}" />

                        <TextBlock Text="Friend"
                                   Foreground="{StaticResource ContrastBrush}"
                                   Visibility="{Binding Path=IsFriend, Converter={StaticResource BoolConverter}, Mode=OneWay}" />

                        <TextBlock Text="Pending Friend"
                                   Foreground="{StaticResource ContrastBrush}"
                                   Visibility="{Binding Path=IsPendingFriend, Converter={StaticResource BoolConverter}, Mode=OneWay}" />

                        <TextBlock Text="Bookmarked"
                                   Foreground="{StaticResource ContrastBrush}"
                                   Visibility="{Binding Path=IsBookmarked, Converter={StaticResource BoolConverter}, Mode=OneWay}" />

                        <TextBlock Text="Is Interesting"
                                   Foreground="{StaticResource ContrastBrush}"
                                   Visibility="{Binding Path=IsOfInterest, Converter={StaticResource BoolConverter}, Mode=OneWay}" />

                        <TextBlock Text="Search Result"
                                   Foreground="{StaticResource ContrastBrush}"
                                   Visibility="{Binding Path=CanRemoveSearchTag, Converter={StaticResource BoolConverter}, Mode=OneWay}" />

                        <TextBlock Text="Updates Ignored"
                                   Foreground="{StaticResource NotAvailableBrush}"
                                   Visibility="{Binding Path=IsUpdatesIgnored, Converter={StaticResource BoolConverter}}" />

                        <TextBlock Text="Not Interesting"
                                   Foreground="{StaticResource NotAvailableBrush}"
                                   Visibility="{Binding Path=IsUninteresting, Converter={StaticResource BoolConverter}, Mode=OneWay}" />
                        
                        <TextBlock Text="Client-side Ignore"
                                   Foreground="{StaticResource NotAvailableBrush}"
                                   Visibility="{Binding Path=IsClientIgnored, Converter={StaticResource BoolConverter}, Mode=OneWay}" />

                        <TextBlock Text="Ignored"
                                   Foreground="{StaticResource NotAvailableBrush}"
                                   Visibility="{Binding Path=IsIgnored, Converter={StaticResource BoolConverter}, Mode=OneWay}" />
                    </StackPanel>
                </Grid>
            </Border>
            <Border BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="0,0,0,1"
                    Padding="5"
                    Visibility="{Binding Path=RightClickMenuViewModel.HasStatusMessage, Converter={StaticResource BoolConverter}}">
                <ScrollViewer MaxHeight="94"
                              IsVisibleChanged="OnIsVisibleChanged">
                    <TextBlock Foreground="{StaticResource ForegroundBrush}"
                                   TextAlignment="Left"
                                   TextWrapping="Wrap"
                                   MaxWidth="200"
                                   Margin="5,0">
                            <lib:TextBlockHelper.InlineList>
                                <Binding Converter="{StaticResource BbCodeConverter}"
                                         Path="RightClickMenuViewModel.Target.StatusMessage" />
                            </lib:TextBlockHelper.InlineList>
                    </TextBlock>
                </ScrollViewer>
            </Border>
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource ImageContentButton}">
                        <Setter Property="CommandParameter"
                                Value="{Binding Path=RightClickMenuViewModel.Target.Name}" />
                        <Setter Property="HorizontalAlignment"
                                Value="Left" />
                        <Setter Property="TextBlock.FontSize"
                                Value="16" />
                        <Setter Property="Margin"
                                Value="10,5,5,5" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Button Command="{Binding RequestPmCommand}"
                        Content="Message" />
                <Button Command="{Binding FindLogCommand}"
                        Content="View Logs" />

                <Line Stretch="Fill" Stroke="{StaticResource HighlightBrush}" X2="1" Margin="0,5" />

                <Button Command="{Binding InterestedCommand}"
                        Content="{Binding Path=RightClickMenuViewModel.MarkInterested}" />
                <Button Command="{Binding NotInterestedCommand}"
                        Content="{Binding Path=RightClickMenuViewModel.MarkUninterested}" />
                <Button Command="{Binding ClientIgnoredCommand}"
                        Content="{Binding Path=RightClickMenuViewModel.MarkClientIgnored}" />

                <Button Command="{Binding IgnoreUpdateCommand}"
                        Content="{Binding Path=RightClickMenuViewModel.IgnoreUpdate}"
                        Visibility="{Binding Path=RightClickMenuViewModel.CanIgnoreUpdates, Converter={StaticResource BoolConverter}}" />

                <Line Stretch="Fill" Stroke="{StaticResource HighlightBrush}" X2="1" Margin="0,5" />

                <Button Command="{Binding BookmarkCommand}"
                        Content="{Binding Path=RightClickMenuViewModel.Bookmark}" />

                <Button Command="{Binding AdvanceFriendCommand}"
                        Content="{Binding Path=RightClickMenuViewModel.AdvanceFriendRequest}"
                        Visibility="{Binding Path=RightClickMenuViewModel.AdvanceFriendRequest, Converter={StaticResource EmptyConverter}}" />

                <Button Command="{Binding RegressFriendCommand}"
                        Content="{Binding Path=RightClickMenuViewModel.RegressFriendRequest}"
                        Visibility="{Binding Path=RightClickMenuViewModel.RegressFriendRequest, Converter={StaticResource EmptyConverter}}" />

                <Button Command="{Binding SearchTagCommand}"
                        Content="Remove from Search Results"
                        Visibility="{Binding Path=RightClickMenuViewModel.CanRemoveSearchTag, Converter={StaticResource BoolConverter}}" />

                <Line Stretch="Fill" Stroke="{StaticResource HighlightBrush}" X2="1" Margin="0,5" />

                <Button Command="{Binding IgnoreCommand}"
                        Content="Ignore"
                        Visibility="{Binding Path=RightClickMenuViewModel.IsIgnored, Converter={StaticResource OppositeBoolConverter}}" />
                <Button Command="{Binding UnignoreCommand}"
                        Content="Unignore"
                        Visibility="{Binding Path=RightClickMenuViewModel.IsIgnored, Converter={StaticResource BoolConverter}}" />

                <Button Command="{Binding ReportCommand}"
                        Visibility="{Binding Path=RightClickMenuViewModel.HasReport, Converter={StaticResource OppositeBoolConverter}}"
                        Content="Report User" />

                <!-- Mod Commands -->
                <Line Stretch="Fill" Stroke="{StaticResource HighlightBrush}" X2="1" Margin="0,5"
                      Visibility="{Binding HasPermissions, Converter={StaticResource BoolConverter}}" />

                <Button Command="{Binding KickCommand}"
                        Content="Kick"
                        Visibility="{Binding HasPermissions, Converter={StaticResource BoolConverter}}" />
                <Button Command="{Binding BanCommand}"
                        Content="Ban"
                        Visibility="{Binding HasPermissions, Converter={StaticResource BoolConverter}}" />
                <Button Command="{Binding HandleReportCommand}"
                        Content="Accept Report"
                        Visibility="{Binding Path=RightClickMenuViewModel.HasReport, Converter={StaticResource BoolConverter}}" />
            </StackPanel>
        </StackPanel>
    </Border>
</Popup>